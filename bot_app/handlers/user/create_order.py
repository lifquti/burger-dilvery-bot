from aiogram.dispatcher import FSMContext
from aiogram.types import Message
from bot_app import db, markups, states, config
from bot_app.db.users import get_user, get_latest_order
from bot_app.markups.user.main import main_menu_with_phone
from bot_app.states.user import User

from bot_app.misc import bot, dp


@dp.message_handler(text='–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üìù')
async def create_order(message: Message, state: FSMContext):
    user_data = await get_user(message.from_user.id)
    if user_data['phone_number']:
        await bot.send_message(message.from_user.id,
                               text='–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∏–∂—á–µ —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏:\n\n',
                               reply_markup=markups.user.main.cancel())
        await state.set_state(User.create_order)
        return

    await bot.send_message(message.from_user.id,
                           text='–í—ñ—Ç–∞—î–º–æ –≤–∞—Å –≤ —á–∞—Ç-–±–æ—Ç—ñ pizza.od.ua!üéâ'
                                '–î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –∑ —á–∞—Ç-–±–æ—Ç–æ–º, –≤–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É.'
                                '–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëá',
                           reply_markup=markups.user.main.main_menu())


@dp.message_handler(text='–í—ñ–¥–º—ñ–Ω–∏—Ç–∏‚ùå', state='*')
async def cancel(message: Message, state: FSMContext):
    await bot.send_message(message.from_user.id, text='–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',
                           reply_markup=main_menu_with_phone())
    await state.finish()


@dp.message_handler(state=states.user.User.create_order)
async def confirmation_order(message: Message, state: FSMContext):
    await state.update_data({'order_text': message.text,
                             'chat_id': message.chat.id})
    await bot.send_message(message.from_user.id, '–ë—É–¥—å –ª–∞—Å–∫–∞ –Ω–∞–ø–∏—à—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏',
                           reply_markup=markups.user.main.cancel_menu())
    await state.set_state(User.address)


@dp.message_handler(state=User.address)
async def comment(message: Message, state: FSMContext):
    await state.update_data({'address': message.text})
    await bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                           reply_markup=markups.user.main.comment_keyboard())
    await state.set_state(User.comment)


@dp.message_handler(text='–ë–µ–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è', state=User.comment)
async def add_addres_without_comment(message: Message, state: FSMContext):
    await state.update_data({'comment': ''})

    order_details = await state.get_data()
    await bot.send_message(message.from_user.id, '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—Ç–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?\n{}'
                                                 '\n–ó–∞ –∞–¥—Ä–µ—Å–æ—é\n{} '
                                                 '\n–ë–µ–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è\n'.format(order_details['order_text'],
                                                                            order_details['address']),
                           reply_markup=markups.user.main.yes_or_no())
    await state.set_state(User.confirmation)


@dp.message_handler(state=User.comment)
async def add_address(message: Message, state: FSMContext):
    await state.update_data({'comment': message.text})
    order_details = await state.get_data()
    await bot.send_message(message.from_user.id, '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—Ç–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?\n{}'
                                                 '\n–ó–∞ –∞–¥—Ä–µ—Å–æ—é\n{} '
                                                 '\n–ö–æ–º–µ–Ω—Ç–∞—Ä\n{}'.format(order_details['order_text'],
                                                                         order_details['address'],
                                                                         order_details['comment']),
                           reply_markup=markups.user.main.yes_or_no())
    await state.set_state(User.confirmation)


@dp.message_handler(text='–ù—ñ ‚ùå', state=User.confirmation)
async def negative_confirmation(message: Message, state: FSMContext):
    await state.finish()
    await bot.send_message(message.from_user.id, '–ì–æ–ª–æ–≤–æ–Ω–µ –º–µ–Ω—é',
                           reply_markup=markups.user.main.main_menu_with_phone())


@dp.message_handler(text='–¢–∞–∫ ‚úÖ', state=User.confirmation)
async def positive_confirmation(message: Message, state: FSMContext):
    order_info = await state.get_data()
    user_data = await get_user(message.from_user.id)
    await db.users.create_order(order_info, user_data['phone_number'])
    latest_order = await get_latest_order()
    await bot.send_message(chat_id=config.ADMINS_ID[0], text='‚úÖ–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n'
                                                             'üìû–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n\t{}\n'
                                                             '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞–º–æ–≤–Ω–∏–∫–∞\n\t{}\n'
                                                             'üóí–ü–µ—Ä–µ–ª—ñ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n\t{}\n'
                                                             'üö©A–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\n\t{}\n'
                                                             'üïë–ß–∞—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n\t{}\n'
                                                             'üìù–ö–æ–º–µ–Ω—Ç–∞—Ä\n\t{}'.format(latest_order['order_number'],
                                                                                     latest_order['phone_number'],
                                                                                     latest_order['products'],
                                                                                     latest_order['address'],
                                                                                     latest_order['date'].strftime("%m/%d/%Y, %H:%M"),
                                                                                     latest_order['comment']))
    await bot.send_message(message.from_user.id, text='–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–µ',
                           reply_markup=markups.user.main.main_menu_with_phone())
    await state.finish()


@dp.message_handler(state=User.confirmation)
async def negative_confirmation(message: Message, state: FSMContext):
    await bot.send_message(message.from_user.id, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∞–∫ –∞–±–æ –Ω—ñ',
                           reply_markup=markups.user.main.yes_or_no())
